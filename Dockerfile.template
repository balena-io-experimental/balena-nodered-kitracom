# base-image for node on any machine using a template variable,
# see more about dockerfile templates here:http://docs.resin.io/pages/deployment/docker-templates
# Note the node:slim image doesn't have node-gyp
FROM resin/%%RESIN_MACHINE_NAME%%-node:6.10.2

# Install apt dependencies
RUN apt-get update && apt-get install -y \
  dnsmasq \
  hostapd \
  iproute2 \
  iw \
  libdbus-1-dev \
  libexpat-dev \
  rfkill && rm -rf /var/lib/apt/lists/*

# Defines our working directory in container
RUN mkdir -p /usr/src/app/

WORKDIR /usr/src/app/

# This install npm dependencies on the resin.io build server,
# making sure to clean up the artifacts it creates in order to reduce the image size.
RUN JOBS=MAX npm install -g node-red node-red-node-serialport node-red-contrib-kitra install node-red-contrib-artik node-red-contrib-artik-cloud node-red-contrib-resinio node-red-dashboard node-red-contrib-ui \
  && npm cache clean && rm -rf /tmp/*

# This will copy all files in our root to the working  directory in the container
COPY ./app ./

# Enable systemd init system in container
ENV INITSYSTEM=on

# server.js will run when container starts up on the device
CMD ["bash", "/usr/src/app/start.sh"]
